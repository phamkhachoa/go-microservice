basePath: /v1/2024
definitions:
  request.CreateProductRequest:
    properties:
      attributes:
        additionalProperties: true
        type: object
      category_id:
        type: integer
      description:
        type: string
      discount_price:
        type: number
      images:
        additionalProperties: true
        type: object
      name:
        type: string
      price:
        type: number
      quantity:
        minimum: 0
        type: integer
      status:
        enum:
        - 1
        - 0
        - -1
        type: integer
      thumbnail:
        type: string
    required:
    - name
    - price
    - quantity
    - status
    type: object
  request.DeleteMultipleProductsRequest:
    properties:
      ids:
        items:
          type: integer
        minItems: 1
        type: array
    required:
    - ids
    type: object
  request.UpdateProductRequest:
    properties:
      attributes:
        additionalProperties: true
        type: object
      category_id:
        type: integer
      description:
        type: string
      discount_price:
        type: number
      images:
        additionalProperties: true
        type: object
      name:
        type: string
      price:
        type: number
      quantity:
        minimum: 0
        type: integer
      status:
        enum:
        - 1
        - 0
        - -1
        type: integer
      thumbnail:
        type: string
    type: object
  response.PaginatedResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      meta:
        $ref: '#/definitions/response.PaginationMeta'
      timestamp:
        type: string
    type: object
  response.PaginationMeta:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total_items:
        type: integer
      total_pages:
        type: integer
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      timestamp:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /api/v1/products:
    post:
      consumes:
      - application/json
      description: Create a new product with the provided details
      parameters:
      - description: Product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/request.CreateProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new product
      tags:
      - products
  /api/v1/products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete a product
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Get a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get a product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update a product with the provided details
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product details to update
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/request.UpdateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update a product
      tags:
      - products
  /api/v1/products/batch-delete:
    post:
      consumes:
      - application/json
      description: Delete multiple products by their IDs
      parameters:
      - description: Product IDs to delete
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.DeleteMultipleProductsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete multiple products
      tags:
      - products
  /api/v1/products/search:
    get:
      consumes:
      - application/json
      description: Search for products based on various filters
      parameters:
      - description: Product name
        in: query
        name: name
        type: string
      - description: Category ID
        in: query
        name: category_id
        type: integer
      - description: Minimum price
        in: query
        name: min_price
        type: number
      - description: Maximum price
        in: query
        name: max_price
        type: number
      - description: Product status
        in: query
        name: status
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      - description: Sort field and direction (e.g., name:asc, price:desc)
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Search for products
      tags:
      - products
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
