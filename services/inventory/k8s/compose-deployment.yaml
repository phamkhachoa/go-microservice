# Deployment for your Golang application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-app
  labels:
    app: inventory-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: inventory-app
  template:
    metadata:
      labels:
        app: inventory-app
    spec:
      containers:
        - name: inventory-app
          image: 442426869743.dkr.ecr.ap-northeast-1.amazonaws.com/go-microservice/inventory1:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 9090
              name: grpc
          env:
            - name: SERVICE_NAME
              value: "inventory-service"
            - name: MYSQL_HOST
              value: "mysql-instance.cbkki0ck69b6.ap-northeast-1.rds.amazonaws.com"
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_USERNAME
              value: "admin"
            - name: MYSQL_PASSWORD
              value: "root1234"
            - name: MYSQL_DBNAME
              value: "mydb"
            - name: REDIS_HOST
              value: "redis-free-tier.5aypkj.0001.apne1.cache.amazonaws.com"
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              value: ""
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Service for your Golang application
apiVersion: v1
kind: Service
metadata:
  name: inventory-service
  labels:
    app.kubernetes.io/name: inventory-service
    app.kubernetes.io/instance: inventory
    app.kubernetes.io/component: inventory
    app.kubernetes.io/part-of: go-microservice
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: grpc
  selector:
    app: inventory-app
---
# Ingress resource using the AWS ALB Ingress Controller
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: go-microservice-ingress
  annotations:
    alb.ingress.kubernetes.io/cors-allow-origins: '*'
    alb.ingress.kubernetes.io/cors-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
    alb.ingress.kubernetes.io/cors-allow-headers: 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization'
    alb.ingress.kubernetes.io/cors-allow-credentials: 'true'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  ingressClassName: alb
  rules:
    - host: d2xjcju5cw0ag.cloudfront.net
      http:
        paths:
          - path: "/api/inventory/v0"
            pathType: Prefix
            backend:
              service:
                name: inventory-service
                port:
                  number: 80

  # Optional: Default backend for requests that don't match any path
  # defaultBackend:
  #   service:
  #     name: default-service
  #     port:
  #       number: 80