# 2025
version: '3.2'

networks:
  pre-go-local-networks:
    driver: bridge

services:

  kafka:
    image: 'bitnami/kafka:3.5'
    container_name: kafka_container
    environment:
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9094,CONTROLLER://:9095
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.115:19094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@pre_kafka_container:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_HEAP_OPTS: -Xmx512M -Xms256M
      KAFKA_KRAFT_CLUSTER_ID: aF3+zO7$wT1~yY1?cC7,qW
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_BROKER_ID: 1
    ports:
      - "19094:9094"
      - "19095:9095"
    volumes:
      - ./kafka/broker1:/bitnami/kafka:rw

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui_container
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka_container:9094
    ports:
      - "9090:8080"
    depends_on:
      - kafka

  mysql:
    image: mysql:8.0
    container_name: mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      MYSQL_DATABASE: shopdevgo
      MYSQL_PASSWORD: root1234
    ports:
      - "33306:3306"
    volumes:
      - ./data/mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d/
    command: [
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci',
      '--skip-character-set-client-handshake'  # Buộc tất cả kết nối sử dụng utf8mb4
    ]
    networks:
      - pre-go-local-networks

  mysqld-exporter:
    image: prom/mysqld-exporter
    container_name: mysqld_exporter_container
    ports:
      - "9104:9104"
    command:
      - '--collect.engine_innodb_status'
      - '--collect.info_schema.processlist'
      - '--collect.info_schema.tables'
      - '--collect.info_schema.query_response_time'
      - '--collect.perf_schema.file_events'
      - '--collect.perf_schema.eventsstatements'
      - '--collect.perf_schema.indexiowaits'
      - '--collect.global_status'
#      - '--ignore-tables'
      - '--config.my-cnf=/etc/mysql/.my.cnf'
    volumes:
      - ./mysqld-exporter/.my.cnf:/etc/mysql/.my.cnf
    environment:
      - DATA_SOURCE_NAME=root:root1234@tcp(mysql:33306)/
    depends_on:
      - mysql
    networks:
      - pre-go-local-networks 

  #support bloom filters
  redis:
    image: redis/redis-stack:latest
    container_name: redis_container_bloom
    ports:
      - "6331:6379"
    volumes:
      - ./data/redis_data:/data
    networks:
      - pre-go-local-networks    

  prometheus:
    image: prom/prometheus:latest
    container_name: pre-event-prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - "9092:9090"
    networks:
      - pre-go-local-networks

  grafana:
    image: grafana/grafana
    container_name: pre-event-grafana
    hostname: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SING_UP=false
      - GF_SERVER_DOMAIN=localhost
      #enable logger
      - GF_LOG_MODE=console file
      - GF_LOG_FILTERS=alerting.notifier.slack:debug alermanager:debug ngalert:debug

    volumes:
      - ./grafana-storage:/var/lib/grafana
    ports:
      - "3002:3000"
    networks:
      - pre-go-local-networks    
